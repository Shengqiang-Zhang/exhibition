<template>
    <view class="activity_introduction">
        <view class="title">随意听风阁·国风集市-北京站</view>
        <view class="image">
            <image class="cover" src="../images/activity_1.jpeg" mode="widthFix"></image>
        </view>
        <view class="time">时间：2019-06-22 10:00 - 2019-06-23 17:00</view>
        <view class="location">地点：北京市朝阳区北京电影学院东朗产业园区</view>
        <view class="price">票价：￥30起</view>
    </view>
    <view class="sgin_in">
        <!--tab模块-->
        <view class="tab_box">
            <tab @currentTab.user="getCurrentTab" :currentTab.sync="currentTab" :tabList.sync="tabList"></tab>
        </view>
        <scroll-view scroll-y="true" class="swiper-item-box" style="height:{{winHeight - 275}}px">
            <!-- 积分规则 -->
            <activityIntro1 wx:if="{{currentTab==0}}"></activityIntro1>
            <!-- 积分记录 -->
            <activityRecom1 :is_empty.sync="is_empty" :list.sync="signList" wx:if="{{currentTab==1}}"></activityRecom1>
        </scroll-view>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import api from '@/api/api';
    import Tab from '@/components/tab'
    import tip from '@/utils/tip'
    import {
        SYSTEM_INFO,
        USER_SPECICAL_INFO
    } from '@/utils/constant';
    import ActivityRecom1 from '@/components/activity_recom_1'
    import ActivityIntro1 from '@/components/activity_intro_1'
    import WepySignTime from '@/components/common/wepy-sign-time';

    export default class ActivityDetail1 extends wepy.page {
        config = {
            navigationBarTitleText: '活动详情',
        }
        components = {
            tab: Tab,
            activityRecom1: ActivityRecom1,
            activityIntro1: ActivityIntro1,
            wepySignTime: WepySignTime
        }
        data = {
            currentTab: 0,
            winHeight: 0,
            tabList: ["活动介绍", "推荐活动"],
            signed: false,
            score: 0,
            conDays: 0,
            signList: [],
            is_empty: false,
            signing: false
        }

        async getUserSign() {
            let that = this;
            let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
            let openId = userSpecialInfo.openid;
            const json = await api.userSginInfo({
                query: {
                    openId: openId
                }
            });
            if (json.data.code == 0) {
                that.signed = json.data.hasSign;
                that.conDays = json.data.conDays;
                that.signList = json.data.list;
                that.score = json.data.score;
                console.log("jefe==", that.signList);
                that.$apply();
            } else {
                tip.error(json.data.msg)
            }
            that.showLoading = false;
        }

        async doSign() {
            let that = this;
            if (that.signing) {
                return;
            }
            that.signing = true;
            let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
            let openId = userSpecialInfo.openid;
            const json = await api.doSign({
                query: {
                    openId: openId
                }
            });
            if (json.data.code == 0) {
                tip.success("恭喜获得10积分!", 3000);
                that.signed = true;
                that.conDays = that.conDays + 1;
                that.siging = false;
                this.getUserSign();
                this.$invoke("wepySignTime", "refreshList", "");
                that.$apply();
            } else {
                wepy.showToast({
                    title: json.data.msg,
                    images: '../images/error.png',
                    duration: 5000
                })
            }
        }

        onLoad() {
            let that = this;
            let systemInfo = wepy.getStorageSync(SYSTEM_INFO);
            console.log("." + systemInfo.windowHeight);
            that.winHeight = systemInfo.windowHeight;
            that.getUserSign();
            that.$apply();
        }

        computed = {}
        methods = {
            getCurrentTab(cur, evt) {
                let that = this;
                that.currentTab = cur;
                that.$apply();
            },
            /**
             * 滑动切换tab
             */
            bindChange(e) {
                let that = this;
                that.currentTab = e.detail.current;
                that.$apply();
            },
            sign() {
                let that = this;
                if (that.signed) {
                    tip.alert("你今天已签过了!");
                } else {
                    that.doSign();
                }
            }
        }
        events = {}
    }
</script>

<style lang="less">

    .activity_introduction{
        text-align: center;
    }
    .title {
        font-size: 50rpx;
        text-align: center;
        font-weight: bold;
        font-family: "楷体", Consolas;
        margin-bottom: 50rpx;
    }

    .time {
        font-size: 28rpx;
    }

    .loation {
        font-size: 28rpx;
    }
    .sgin_in {
        position: relative;
    }

    .qd_content {
        position: relative;
        z-index: 6;
        height: 460 rpx;
    }

    .head_bc {
        height: 460 rpx;
        width: 100%;
        position: absolute;
    }

    .jf {
        font-size: 32 rpx;
        color: #fff;
        padding: 50 rpx 0 rpx 10 rpx 35 rpx;
    }

    .in_crl {
        background: #FFF;
        border-radius: 1000 rpx;
        border: 2 rpx solid #7fbcff;
        bottom: 0;
        color: #007aff;
        height: 200 rpx;
        left: 0;
        margin: auto;
        position: absolute;
        right: 0;
        top: 0;
        width: 200 rpx;
        z-index: 100;
        text-align: center;
    }

    .second_crl {
        position: relative;
        border-radius: 1000 rpx;
        width: 235 rpx;
        height: 235 rpx;
        margin: 0 auto;
        top: 15 rpx;
        z-index: 3;
        background: #fff;
    }

    .out_crl {
        position: relative;
        border-radius: 1000 rpx;
        width: 265 rpx;
        height: 265 rpx;
        margin: 0 auto;
        z-index: 2;
        background: #f40;
        background-color: rgba(255, 255, 255, 0.2);
    }

    .sign_state {
        font-size: 40 rpx;
        font-weight: 600;
        margin-bottom: 15 rpx;
        margin-top: 50 rpx;
        display: block;
    }

    .line {
        height: 2 rpx;
        background: #dcdcdc;
        width: 165 rpx;
        margin: 0 auto;
    }

    .sign_times {
        font-size: 30 rpx;
        margin-top: 15 rpx;
        display: block;
    }

    .sign_doc {
        font-size: 30 rpx;
        text-align: center;
        color: #fff;
        margin-top: 30 rpx;
    }

    .tab_box {
        background: #fff;
        padding: 0 120rpx;
    }

    .line-box {
        height: 100 rpx;
        position: relative;
        background: #fff;
        margin-bottom: 10 rpx;
    }
</style>
